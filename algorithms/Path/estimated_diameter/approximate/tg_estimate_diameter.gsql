CREATE QUERY tg_estimate_diameter(SET<STRING> v_type_set, SET<STRING> e_type_set, INT seed_set_length, BOOL print_results = TRUE, STRING file_path = "", BOOL print_stats = FALSE) SYNTAX V1 {

    /*
    First Author: <First Author Name>
    First Commit Date:  <First Commit Date>

    Recent Author: <Recent Commit Author Name>
    Recent Commit Date: <Recent Commit Date>


    Repository:
        https://github.com/tigergraph/gsql-graph-algorithms/tree/master/algorithms/Path

    Maturity:
        production

    Description: 
        Estimates the worst-case length of a shortest path between any pair of vertices in a graph.

    Publications:
        NA

    TigerGraph Documentation:
        https://docs.tigergraph.com/graph-ml/current/pathfinding-algorithms/estimated-diameter

    Parameters:
        v_type_set:
            Names of vertex types to use
        e_type_set:
            Names of edge types to use
        seed_set_length:
            The number k of random seed vertices to use
        print_accum:
            If True, output JSON to standard output
        file_path:
            If not empty, write output to this file
    */
  
  MaxAccum<INT> @@max_diameter;
  FILE f (file_path);
  start = {v_type_set};
  start = SELECT s
          FROM start:s
          LIMIT seed_set_length;
  
  IF print_stats THEN
      PRINT start;
  END;
  
  start = SELECT s
          FROM start:s
          ACCUM @@max_diameter += tg_max_BFS_depth(s, e_type_set);
        
  IF print_results THEN
      PRINT @@max_diameter as diameter;
  END;
  
  IF file_path != "" THEN
      f.println("Diameter");
      f.println(@@max_diameter);
  END;
}
