CREATE QUERY tg_maximal_indep_set_random(
  SET<STRING> v_type_set,
  SET<STRING> e_type_set,
  BOOL print_results = TRUE,
  STRING file_path = "")  SYNTAX V1 {


    /*
    First Author: <First Author Name>
    First Commit Date:  <First Commit Date>

    Recent Author: <Recent Commit Author Name>
    Recent Commit Date: <Recent Commit Date>


    Repository:
        https://github.com/tigergraph/gsql-graph-algorithms/tree/master/algorithms/Classification

    Maturity:
        Production

    Description: 
        Maximal Independent Set query only supports one edge type and works only for undirected graphs at the moment (8/12/20).

    Publications:
        NA

    TigerGraph Documentation:
        https://docs.tigergraph.com/graph-ml/current/classification-algorithms/maximal-independent-set

    Parameters:
        v_type_set:
            Name of vertex type to use
        e_type_set:
            Name of edge type to use
        print_results:
            If True, output JSON to standard output
        file_path:
            If not empty, write output to this file.
    */

  TYPEDEF TUPLE<VERTEX v, DOUBLE score> VertexScore;
  HeapAccum <VertexScore> (1, score ASC) @MISHeap;
  OrAccum<BOOL> @disincluded, @included;
  MinAccum<DOUBLE> @r;

  INT _mod, _mult;

  FILE f (file_path);

  _mod = 100000000;
  _mult =  pow(2, 31)-1;

  Start = {v_type_set};

  Pool =
    SELECT s FROM Start:s
    ACCUM
      s.@MISHeap += VertexScore(s, 1),
      s.@r = ((getvid(s)+datetime_to_epoch(now()) * _mult + 1) % _mod) / (_mod*1.0);

  WHILE Pool.size() > 0 DO
    Pool =
      SELECT s FROM Pool:s
      WHERE s.@disincluded == FALSE AND s.@included == FALSE;
    PriorityCalculation =
      SELECT s FROM Pool:s -(e_type_set:e)- v_type_set:t
      ACCUM
        IF t.@disincluded == FALSE AND t.@included == FALSE THEN
          s.@MISHeap += VertexScore(t, t.@r)
        END
      POST-ACCUM
        IF s.@MISHeap.top().v == s OR s.@r < s.@MISHeap.top().score THEN
          s.@included = TRUE
        END;
    Culling =
      SELECT s FROM Pool:s -(e_type_set:e)- v_type_set:t
      WHERE s.@included == TRUE
      ACCUM
        t.@disincluded += TRUE;
    Pool =
      SELECT s FROM Pool:s
      POST-ACCUM
        s.@MISHeap.clear();
    Pool =
      SELECT s FROM Pool:s
      POST-ACCUM
        s.@MISHeap += VertexScore(s, s.@r);
    PRINT Pool.size();
  END;

 	Results = SELECT s FROM Start:s
    WHERE s.@included == TRUE
 		POST-ACCUM
 			IF file_path != "" THEN f.println(s) END;

 	IF print_results THEN
 		PRINT Results;
 	END;
  PRINT Results.size();
}
